name: Green-AutoBuild
on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
  schedule:
    - cron: '0 0 * * 6'
  watch:
    types: [started]

env:
  RUN_VALIDATION: true

jobs:
  build:
    runs-on: ubuntu-20.04
    if: github.event.repository.owner.id == github.event.sender.id
    
    name: Build Green

    steps:
    - name: Checkout
      uses: actions/checkout@v3
            
    - name: Initialization environment
      run: |
        #sudo echo "nameserver 1.1.1.1" >> /etc/hosts
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "Asia/Shanghai"
        sudo rm -rf "/usr/local/share/boost"
        sudo rm -rf "$AGENT_TOOLSDIRECTORY"
        sudo rm -rf /usr/share/
        sudo bash -c 'bash <(curl -L -s https://build-scripts.immortalwrt.eu.org/init_build_environment.sh)'
        sudo apt install -y libextutils-makemaker-perl libthread-queue-perl libfindbin-perl
        
    - name: Clone source code  
      run: |
        df -hT $PWD
        git clone https://github.com/5high/buildroot-installer HassOS

    - name: Build
      shell: 'script -q -e -c "bash {0}"'
      id: build
      run: |
        sleep $((RANDOM % 60))    
        cd HassOS
        cp configs/green_installer_defconfig .config
        make defconfig
        make

    - name: Upload images to release
      id: upload-release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: HassOS/output/images/*
        asset_name: Green
        overwrite: true
        file_glob: true
        body: "中国大陆版本Home Assitant Green固件"

    - name: Delete workflow runs
      uses: 5high/delete-workflow-runs@main
      with:
        retain_days: 1
        keep_minimum_runs: 1

    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@v0.3.2
      with:
        keep_latest: 8
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
#    - name: Notify on Telegram
#      uses: appleboy/telegram-action@master
#      with:
#        to: ${{ secrets.TELEGRAM_CHAT_ID }}
#        token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
#       message: "New release! Download it [here](${{ steps.upload-release.outputs.browser_download_url }})."
